name: Deploy Telegram Bot

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
      
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python -
    
    - name: Install dependencies
      run: poetry install --only test,format --no-interaction --no-ansi

    - name: Run linters
      run: |
        poetry run black .
        poetry run autoflake .
        poetry run isort .
        poetry run pybetter .

    - name: Run tests
      run: poetry run pytest

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/telegram-bot:latest .

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/telegram-bot:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        WORK_DIR: /deployments
      run: |
        sudo apt-get install sshpass
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${SSH_PRIVATE_KEY}" | base64 -d > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $SERVER_HOST >> ~/.ssh/known_hosts
        sshpass -p ${{ secrets.SERVER_PASSWORD }} $SERVER_USER@$SERVER_HOST
          mkdir -p $WORK_DIR
          cd $WORK_DIR
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker pull ${{ secrets.DOCKER_USERNAME }}/telegram-bot:latest
          docker run -d -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} -e TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }} --name telegram-bot ${{ secrets.DOCKER_USERNAME }}/telegram-bot:latest

    - name: Cleanup 
      run: rm -rf ~/.ssh
