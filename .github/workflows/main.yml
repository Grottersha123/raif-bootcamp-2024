name: Deploy Telegram Bot

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true
      
jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Set up Python
  #     uses: actions/setup-python@v4
  #     with:
  #       python-version: '3.9'

  #   - name: Install Poetry
  #     run: |
  #       curl -sSL https://install.python-poetry.org | python -
    
  #   - name: Install dependencies
  #     run: poetry install --only test,format --no-interaction --no-ansi

  #   - name: Run linters
  #     run: |
  #       poetry run black .
  #       poetry run autoflake .
  #       poetry run isort .
  #       poetry run pybetter .

  #   - name: Run tests
  #     run: poetry run pytest

  #   - name: Log in to Docker Hub
  #     run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

  #   - name: Build Docker image
  #     run: docker build -t ${{ secrets.DOCKER_USERNAME }}/telegram-bot:latest .

  #   - name: Push Docker image to Docker Hub
  #     run: docker push ${{ secrets.DOCKER_USERNAME }}/telegram-bot:latest

  deploy:
    runs-on: ubuntu-latest
    # needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        WORK_DIR: /root/deployments
        TB: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        OA: ${{ secrets.OPENAI_API_KEY }}
      run: |
        ssh-keyscan -t rsa $SERVER_HOST >> ~/.ssh/known_hosts
        ssh $SERVER_USER@$SERVER_HOST << 'ENDSSH'
        cd $WORK_DIR
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker pull ${{ secrets.DOCKER_USERNAME }}/telegram-bot:latest
        docker stop telegram-bot
        docker rm telegram-bot
        docker run -d -p 0.0.0.0:8000:8000/tcp -e TELEGRAM_BOT_TOKEN="$TB" -e OPENAI_API_KEY="$OA" --name telegram-bot ${{ secrets.DOCKER_USERNAME }}/telegram-bot:latest sh -c 'echo TELEGRAM_BOT_TOKEN is $TELEGRAM_BOT_TOKEN'
        ENDSSH

    - name: Cleanup 
      run: rm -rf ~/.ssh
